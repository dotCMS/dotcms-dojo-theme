/*

====================================
DOJO DOM TREE INFORMATION
====================================
Just for guideance

.dijitDropDownButton {
  .dijitArrowButtonInner <-- background container
    :before <-- icon
}

table.dijitComboButton {
  td.dijitButtonNode.dijitArrowButton {
    .dijitArrowButtonInner <-- background container
      :before <-- icon
  }
}

.dijitComboBox {
  .dijitButtonNode.dijitArrowButton { <-- background container
    .dijitArrowButtonInner
     :before <-- icon
  }
}

.dijitSpinner {
  .dijitSpinnerButtonContainer { <-- container wrapper

    .dijitButtonNode.dijitArrowButton.dijitUpArrowButton { <-- icon wrapper
      .dijitArrowButtonInner {
        .dijitInputField
      }
    }
    .dijitButtonNode.dijitArrowButton.dijitDownArrowButton { <-- icon wrapper
      .dijitArrowButtonInner {
        .dijitInputField
      }
    }
  }
}

.dijitSelect {
  .dijitArrowButtonContainer {

  }
}

*/

.dijitButton,
.dijitComboButton,
.dijitDropDownButton,
.dijitSelect,
.dijitTextBox,
.dijitToggleButton {
  @include border-radius($field-border-radius);
  font-size: $body-size;
  height: $field-height;
}

.dijitButton,
.dijitComboButton,
.dijitComboButton .dijitArrowButtonInner,
.dijitDropDownButton,
.dijitDropDownButton .dijitArrowButtonInner,
.dijitSelect,
.dijitTextBox,
.dijitToggleButton {
  @include transition(background-color $field-animation-speed);
}

.dijitComboButton,
.dijitDropDownButton,
.dijitSelect,
.dijitTextBox,
.dijitToggleButton {
  border: solid 1px $field-border-color;
  color: $buttonextra-textcolor;
}

.dijitComboBox .dijitArrowButtonContainer,
.dijitComboButton .dijitArrowButtonInner,
.dijitDropDownButton .dijitArrowButtonInner,
.dijitSelect .dijitArrowButtonContainer,
.dijitSpinner .dijitSpinnerButtonContainer {
  height: $field-height - 2px; // Need to substract the border (top and bottom)
  border: none;
  position: relative;
}

.dijitComboButton .dijitArrowButtonInner,
.dijitDropDownButton .dijitArrowButtonInner,
.dijitSpinner .dijitSpinnerButtonContainer {
  width: 24px;
}

.dijitComboButton .dijitArrowButtonInner,
.dijitSpinner .dijitSpinnerButtonContainer {
  background-color: $gray-dark;
}

.dijitComboBox,
.dijitSelect {
  .dijitArrowButtonContainer {
    width: $field-height;

    &:before {
      content: "";
      @include center-icon(14px, 10px); // Sadly compass can't get width and height from a svg
      background-image: url("/images/ico-combobox.svg");
      height: 10px !important; // :( overwrite from dijit.css
      width: 16px;
    }
  }
}

.dijitComboButton,
.dijitDropDownButton,
.dijitSpinner {
  .dijitArrowButtonInner {
    &:before {
      content: "";
      @include center-icon(10px, 6px); // Sadly compass can't get width and height from a svg
      height: 6px !important; // :( overwrite from dijit.css
      width: 10px;
    }
  }
}

.dijitComboButton,
.dijitSpinner {
  .dijitArrowButtonInner {
    &:before {
      background-image: url("/images/ico-arrow-sm-light.svg");
    }
  }
}

.dijitDropDownButton {
  .dijitArrowButtonInner {
    &:before {
      background-image: url("/images/ico-arrow-sm-dark.svg");
    }
  }
}

.dijitDisabled {
  border-style: dotted;
  @include opacity(0.3);

  &.dijitCheckBox,
  &.dijitCheckBoxInput,
  &.dijitRadio {
    border-style: solid;
  }
}

.dijitInputInner {
  color: $text-color;
  line-height: $field-height;
}

.dijitIcon {
  width: $field-icon-size;
  height: $field-icon-size;
  margin-right: $field-padding / 2;
}

.dijitTextBox {
  padding: 0 $field-padding;

  &Hover {
    @include box-shadow(0 0 $textbox-hover-shadow-size 0 rgba($gray-dark, 0.35));

    &Focused {
      @include box-shadow(none);
    }
  }

  &Focused {
    border-color: $blue;
    background-color: rgba($blue, 0.1);
  }
}

.dijitSpinner {
  padding-right: 0;

  .dijitUpArrowButton {
    .dijitArrowButtonInner {
      @include rotate(180deg);
    }
  }
}

.dijitPlaceHolder {
  color: $field-placeholder-color;
  font-style: normal;
  line-height: $field-height;
}

.dijitTextArea {
  font-family: $body-text;
  font-size: $body-size;
  color: $text-color;
  padding: $field-padding / 2 $field-padding;
}